{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoEGovDataverse"
        },
        "impersonation": {},
        "runtimeSource": "embedded"
      },
      "shared_office365": {
        "api": {
          "name": "shared_office365"
        },
        "connection": {
          "connectionReferenceLogicalName": "new_CoEGovO365Outlook"
        },
        "runtimeSource": "embedded"
      },
      "shared_office365users": {
        "api": {
          "name": "shared_office365users"
        },
        "connection": {
          "connectionReferenceLogicalName": "new_CoEGovO365Users"
        },
        "runtimeSource": "embedded"
      },
      "shared_teams": {
        "api": {
          "name": "shared_teams"
        },
        "connection": {
          "connectionReferenceLogicalName": "new_CoEGovTeams"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Create_Adaptive_Card_with_all_orphans": {
          "actions": {
            "Append_action_section_to_theCard": {
              "inputs": {
                "name": "theCard",
                "value": "    }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"ActionSet\",\n    \"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Take Ownership\",\n            \"style\": \"positive\",\n            \"id\": \"TakeOwnership\"\n        },\n        {\n            \"title\": \"Delete All\",\n            \"type\": \"Action.Submit\",\n            \"id\": \"DeleteAll\"\n        },\n     {\n            \"title\": \"Assign Ownership\",\n            \"type\": \"Action.ShowCard\",\n            \"id\": \"AssignAll\",\n            \"card\":{\n                 \"type\": \"AdaptiveCard\",\n                 \"body\": [\n                            {\n                             \"type\": \"Input.Text\",\n                             \"id\": \"toWhom\",\n                             \"placeholder\": \"AssignToWhom@example.com\",\n                             \"style\": \"Email\",\n                             \"spacing\": \"None\"\n                           }\n                         ],\n                  \"actions\":[\n                         {\n                            \"type\": \"Action.Submit\",\n                            \"id\": \"AssignAllDone\",\n                            \"title\": \"Assign Now\"\n                         }\n                       ],\n                   \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\"\n              }\n        },\n        {\n            \"title\": \"Email Me\",\n            \"type\": \"Action.Submit\",\n            \"id\": \"EmailMe\"\n        },\n        {\n            \"title\": \"See Each\",\n            \"type\": \"Action.Submit\",\n            \"id\": \"SeeEach\"\n        }\n"
              },
              "metadata": {
                "operationMetadataId": "92657404-86fd-42b3-8886-6ab25ec2550e"
              },
              "runAfter": {
                "Append_flow_records_to_theCard": [
                  "Succeeded"
                ]
              },
              "type": "AppendToStringVariable"
            },
            "Append_app_records_to_theCard": {
              "inputs": {
                "name": "theCard",
                "value": "@{variables('AppsTableAppNameCol')}@{variables('AppsTableEmployeeNameCol')}@{variables('AppsTableLastLaunchedCol')}"
              },
              "metadata": {
                "operationMetadataId": "103b1f77-5c58-4f62-9f41-5f4c7e020ffe"
              },
              "runAfter": {},
              "type": "AppendToStringVariable"
            },
            "Append_end_to_theCard": {
              "inputs": {
                "name": "theCard",
                "value": "            ]\n        }\n    ]\n}"
              },
              "metadata": {
                "operationMetadataId": "825a22a0-6e07-4ea0-b095-20fbd10cf7cb"
              },
              "runAfter": {
                "Append_action_section_to_theCard": [
                  "Succeeded"
                ]
              },
              "type": "AppendToStringVariable"
            },
            "Append_flow_records_to_theCard": {
              "inputs": {
                "name": "theCard",
                "value": "@{variables('FlowsTableAppNameCol')}@{variables('FlowsTableEmployeeNameCol')}@{variables('FlowsTableStatusCol')}"
              },
              "metadata": {
                "operationMetadataId": "d6ed5b9b-d07b-4a95-aef7-f79e5712d903"
              },
              "runAfter": {
                "Append_flow_table_start_to_theCard": [
                  "Succeeded"
                ]
              },
              "type": "AppendToStringVariable"
            },
            "Append_flow_table_start_to_theCard": {
              "inputs": {
                "name": "theCard",
                "value": "    }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {"
              },
              "metadata": {
                "operationMetadataId": "e7eac758-19d3-4e06-8cd6-98037777df14"
              },
              "runAfter": {
                "Append_app_records_to_theCard": [
                  "Succeeded"
                ]
              },
              "type": "AppendToStringVariable"
            },
            "Compose": {
              "inputs": "@variables('OrphanedFlows')",
              "metadata": {
                "operationMetadataId": "c82af6c4-89b4-4932-a959-1bda9af8ff99"
              },
              "runAfter": {
                "Append_end_to_theCard": [
                  "Succeeded"
                ]
              },
              "type": "Compose"
            }
          },
          "description": "append the tabular columns, the mid section, and the actions",
          "metadata": {
            "operationMetadataId": "2aeb9439-ffbe-41d1-96d4-53e21d71f8cc"
          },
          "runAfter": {
            "Prepare_HTML_Table_for_Emails_if_needed": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Get_Orphaned_Objects_for_this_Manager": {
          "actions": {
            "Apply_to_each_orphaned_employee": {
              "actions": {
                "Apply_to_each_of_their_apps": {
                  "actions": {
                    "Add_app_to_table_-_app_name": {
                      "inputs": {
                        "name": "AppsTableAppNameCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{replace(items('Apply_to_each_of_their_apps')?['admin_displayname'], '\"', '_')}\""
                      },
                      "metadata": {
                        "operationMetadataId": "2855454b-472a-4850-9e4e-a8f7099a71a3"
                      },
                      "runAfter": {},
                      "type": "AppendToStringVariable"
                    },
                    "Add_app_to_table_-_last_launched": {
                      "inputs": {
                        "name": "AppsTableLastLaunchedCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{if(equals(items('Apply_to_each_of_their_apps')?['admin_applastlaunchedon'], null), 'unknown', formatDateTime(items('Apply_to_each_of_their_apps')?['admin_applastlaunchedon'], 'd'))}\""
                      },
                      "metadata": {
                        "operationMetadataId": "40a39dc7-54a0-4efc-97ad-08f7ceb877fe"
                      },
                      "runAfter": {
                        "Add_app_to_table_-_owner_name": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable"
                    },
                    "Add_app_to_table_-_owner_name": {
                      "inputs": {
                        "name": "AppsTableEmployeeNameCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{if(equals(items('Apply_to_each_of_their_apps')?['admin_appownerdisplayname'], null), 'unknown', items('Apply_to_each_of_their_apps')?['admin_appownerdisplayname'])}\""
                      },
                      "metadata": {
                        "operationMetadataId": "7aba4407-1208-4f66-a0a2-53897960aa71"
                      },
                      "runAfter": {
                        "Add_app_to_table_-_app_name": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable"
                    },
                    "Append_to_OrphanedApps": {
                      "inputs": {
                        "name": "OrphanedApps",
                        "value": "@variables('OrphanedObject')"
                      },
                      "metadata": {
                        "operationMetadataId": "11cc86a8-9047-48e5-9e7b-cf1256cb0064"
                      },
                      "runAfter": {
                        "Create_Orphaned_Object_-_App": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_Orphaned_Object_-_App": {
                      "inputs": {
                        "name": "OrphanedObject",
                        "value": {
                          "AppDisplayName": "@items('Apply_to_each_of_their_apps')?['admin_displayname']",
                          "AppID": "@items('Apply_to_each_of_their_apps')?['admin_appid']",
                          "EnvtDisplayName": "@items('Apply_to_each_of_their_apps')?['admin_appenvironmentdisplayname']",
                          "EnvtName": "@items('Apply_to_each_of_their_apps')?['admin_appenvironment/admin_environmentname']",
                          "LastLaunched": "@if(equals(items('Apply_to_each_of_their_apps')?['admin_applastlaunchedon'], null), 'unknown', formatDateTime(items('Apply_to_each_of_their_apps')?['admin_applastlaunchedon'], 'd'))",
                          "LastModified": "@if(equals(items('Apply_to_each_of_their_apps')?['admin_appmodifiedon'], null), 'unknown', formatDateTime(items('Apply_to_each_of_their_apps')?['admin_appmodifiedon'], 'd'))",
                          "OwnerDisplayName": "@items('Apply_to_each_of_their_apps')?['admin_appownerdisplayname']"
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "0653e876-fe72-46e8-a0e8-e6f4040847ca"
                      },
                      "runAfter": {
                        "Add_app_to_table_-_last_launched": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "description": "Add to card variables for tabular display and add to app array",
                  "foreach": "@outputs('List_their_canvas_apps')?['body/value']",
                  "metadata": {
                    "operationMetadataId": "091275a4-3a44-462f-a3d8-95fe9dbd13f7"
                  },
                  "runAfter": {
                    "List_their_canvas_apps": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Apply_to_each_of_their_flows": {
                  "actions": {
                    "Add_flow_to_table_-_flow_name": {
                      "inputs": {
                        "name": "FlowsTableAppNameCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{replace(items('Apply_to_each_of_their_flows')?['admin_displayname'], '\"', '_')}\""
                      },
                      "metadata": {
                        "operationMetadataId": "df2cc0ad-03e7-4515-a27d-653cad10fe94"
                      },
                      "runAfter": {},
                      "type": "AppendToStringVariable"
                    },
                    "Add_flow_to_table_-_owner_name": {
                      "inputs": {
                        "name": "FlowsTableEmployeeNameCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{items('Apply_to_each_of_their_flows')?['admin_derivedowner/admin_displayname']}\""
                      },
                      "metadata": {
                        "operationMetadataId": "96fa7145-e713-4c2e-bfeb-086f367efd25"
                      },
                      "runAfter": {
                        "Add_flow_to_table_-_flow_name": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable"
                    },
                    "Add_flow_to_table_-_status": {
                      "inputs": {
                        "name": "FlowsTableStatusCol",
                        "value": "                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"separator\": true,\n                            \"text\": \"@{items('Apply_to_each_of_their_flows')?['admin_flowstate']}\""
                      },
                      "metadata": {
                        "operationMetadataId": "60bfe1e0-6198-464c-987d-f663c35cd748"
                      },
                      "runAfter": {
                        "Add_flow_to_table_-_owner_name": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable"
                    },
                    "Append_to_OrphanedFlows": {
                      "inputs": {
                        "name": "OrphanedFlows",
                        "value": "@variables('OrphanedObject')"
                      },
                      "metadata": {
                        "operationMetadataId": "1b8ee033-34bb-469a-a25e-6ca41ef1b228"
                      },
                      "runAfter": {
                        "Create_Orphaned_Object_-_flow": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable"
                    },
                    "Create_Orphaned_Object_-_flow": {
                      "inputs": {
                        "name": "OrphanedObject",
                        "value": {
                          "EnvtDisplayName": "@{items('Apply_to_each_of_their_flows')?['admin_flowenvironmentdisplayname']}",
                          "EnvtName": "@{items('Apply_to_each_of_their_flows')?['admin_flowenvironment/admin_environmentname']}",
                          "FlowDisplayName": "@{items('Apply_to_each_of_their_flows')?['admin_displayname']}",
                          "FlowID": "@{items('Apply_to_each_of_their_flows')?['admin_flowid']}",
                          "FlowState": "@{items('Apply_to_each_of_their_flows')?['admin_flowstate']}",
                          "LastModified": "@if(equals(items('Apply_to_each_of_their_flows')?['admin_flowmodifiedon'], null), 'unknown', formatDateTime(items('Apply_to_each_of_their_flows')?['admin_flowmodifiedon'], 'd'))",
                          "OwnerDisplayName": "@{items('Apply_to_each_of_their_flows')?['admin_derivedowner/admin_displayname']}",
                          "isSolnFlow": "@if(equals(items('Apply_to_each_of_their_flows')?['admin_workflowentityid'], null), false, true)"
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "54624be0-efce-48ae-b5d7-3d9d71db3b9e"
                      },
                      "runAfter": {
                        "Add_flow_to_table_-_status": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable"
                    }
                  },
                  "description": "Add to card variables for tabular display and add to flow array",
                  "foreach": "@outputs('List_their_cloud_flows')?['body/value']",
                  "metadata": {
                    "operationMetadataId": "34b5ad10-4f63-4af3-bf7f-185efa0ba11b"
                  },
                  "runAfter": {
                    "List_their_cloud_flows": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "List_their_canvas_apps": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords"
                    },
                    "parameters": {
                      "$expand": "admin_AppEnvironment($select=admin_environmentname)",
                      "$filter": "admin_appdeleted eq false and admin_powerappstype eq 597910000 and _admin_appowner_value eq @{items('Apply_to_each_orphaned_employee')?['admin_makerid']}",
                      "$select": "admin_appmodifiedon, admin_applastlaunchedon, admin_appownerdisplayname, admin_displayname, admin_appenvironmentdisplayname, _admin_appowner_value, admin_appid",
                      "entityName": "admin_apps"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "2cc2bd7a-23f0-40f0-82cb-a342cb8bafd0"
                  },
                  "runAfter": {},
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "type": "OpenApiConnection"
                },
                "List_their_cloud_flows": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords"
                    },
                    "parameters": {
                      "$expand": "admin_FlowEnvironment($select=admin_environmentname), admin_DerivedOwner($select=admin_displayname)",
                      "$filter": "admin_flowdeleted eq false and ( _admin_derivedowner_value eq @{items('Apply_to_each_orphaned_employee')?['admin_makerid']} or (_admin_derivedowner_value eq null and _admin_flowcreator_value eq @{items('Apply_to_each_orphaned_employee')?['admin_makerid']}))",
                      "$select": "admin_flowmodifiedon, admin_flowmakerdisplayname, admin_flowstate, admin_flowenvironmentdisplayname, admin_displayname, _admin_flowcreator_value,  _admin_derivedowner_value, admin_flowid, _admin_flowenvironment_value, admin_workflowentityid",
                      "entityName": "admin_flows"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "148b4651-1813-4ad3-a183-38dbd021d0a6"
                  },
                  "runAfter": {
                    "Apply_to_each_of_their_apps": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "type": "OpenApiConnection"
                }
              },
              "foreach": "@outputs('List_managers_orphaned_employees')?['body/value']",
              "metadata": {
                "operationMetadataId": "29b7e9c3-0d39-478d-816f-1589be8852b9"
              },
              "runAfter": {
                "List_managers_orphaned_employees": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Compose_2": {
              "inputs": "@variables('OrphanedFlows')",
              "metadata": {
                "operationMetadataId": "949e891f-9e13-4b4e-84ff-7794c7af549b"
              },
              "runAfter": {
                "Apply_to_each_orphaned_employee": [
                  "Succeeded"
                ]
              },
              "type": "Compose"
            },
            "List_managers_orphaned_employees": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "admin_managerprinciplename eq '@{triggerBody()['text']}'  and admin_makerisorphaned eq true",
                  "$select": "admin_makerid",
                  "entityName": "admin_makers"
                }
              },
              "metadata": {
                "operationMetadataId": "ce8eca65-1eb3-4178-ba62-fda2370b70c6"
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              },
              "type": "OpenApiConnection"
            },
            "Parse_Orphaned_Apps": {
              "inputs": {
                "content": "@variables('OrphanedApps')",
                "schema": {
                  "items": {
                    "properties": {
                      "AppDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "AppID": {
                        "type": "string"
                      },
                      "EnvtDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "EnvtName": {
                        "type": "string"
                      },
                      "LastLaunched": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "LastModified": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "OwnerDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    },
                    "required": [
                      "LastModified",
                      "LastLaunched",
                      "OwnerDisplayName",
                      "AppDisplayName",
                      "EnvtDisplayName",
                      "AppID",
                      "EnvtName"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "metadata": {
                "operationMetadataId": "1168a796-b2a3-45cc-bcbe-cc681c54a4b4"
              },
              "runAfter": {
                "Compose_2": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "Parse_Orphaned_Flows": {
              "inputs": {
                "content": "@variables('OrphanedFlows')",
                "schema": {
                  "items": {
                    "properties": {
                      "EnvtDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "EnvtName": {
                        "type": "string"
                      },
                      "FlowDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "FlowID": {
                        "type": "string"
                      },
                      "FlowState": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "LastModified": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "OwnerDisplayName": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "isSolnFlow": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "LastModified",
                      "FlowState",
                      "OwnerDisplayName",
                      "FlowDisplayName",
                      "EnvtDisplayName",
                      "FlowID",
                      "EnvtName",
                      "isSolnFlow"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "metadata": {
                "operationMetadataId": "dbaf3bec-eeb7-421d-b75e-362185f596ec"
              },
              "runAfter": {
                "Parse_Orphaned_Apps": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            }
          },
          "metadata": {
            "operationMetadataId": "93b58c7d-ec45-4d8d-a43c-6c92685a4c06"
          },
          "runAfter": {
            "Initialize_returnValue": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Get_managers_id": {
          "inputs": {
            "authentication": "@parameters('$authentication')",
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users",
              "connectionName": "shared_office365users",
              "operationId": "UserProfile_V2"
            },
            "parameters": {
              "id": "@triggerBody()['text']"
            },
            "retryPolicy": {
              "count": 10,
              "interval": "PT10S",
              "type": "exponential"
            }
          },
          "metadata": {
            "operationMetadataId": "606c1267-b33c-4340-ad0f-fc55cd5c5852"
          },
          "runAfter": {},
          "type": "OpenApiConnection"
        },
        "If_not_timed_out": {
          "actions": {
            "Switch": {
              "cases": {
                "Case_Assign_All": {
                  "actions": {
                    "Get_toWhom_profile": {
                      "inputs": {
                        "authentication": "@parameters('$authentication')",
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users",
                          "connectionName": "shared_office365users",
                          "operationId": "UserProfile_V2"
                        },
                        "parameters": {
                          "id": "@outputs('Send_Table_For_Response')?['body/data/toWhom']"
                        },
                        "retryPolicy": {
                          "count": 10,
                          "interval": "PT10S",
                          "type": "exponential"
                        }
                      },
                      "runAfter": {},
                      "type": "OpenApiConnection"
                    },
                    "Switch_on_toWhom_lookup": {
                      "cases": {
                        "200_Success": {
                          "actions": {
                            "Assign_Each_App_to_New_Owner": {
                              "actions": {
                                "Check_if_reassignment_worked": {
                                  "actions": {
                                    "Set_BulkOperationSuccess_to_false_AssignAllDone": {
                                      "inputs": {
                                        "name": "BulkOperationSuccess",
                                        "value": "@false"
                                      },
                                      "runAfter": {},
                                      "type": "SetVariable"
                                    }
                                  },
                                  "expression": {
                                    "not": {
                                      "equals": [
                                        "@outputs('Reassign_This_One')?['Body']?['return']",
                                        "pass"
                                      ]
                                    }
                                  },
                                  "runAfter": {
                                    "Reassign_This_One": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Reassign_This_One": {
                                  "inputs": {
                                    "body": {
                                      "text": "@outputs('Get_toWhom_profile')?['body/id']",
                                      "text_1": "@items('Assign_Each_App_to_New_Owner')['AppID']",
                                      "text_2": "@items('Assign_Each_App_to_New_Owner')['EnvtName']",
                                      "text_3": "assign"
                                    },
                                    "host": {
                                      "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                                    }
                                  },
                                  "runAfter": {},
                                  "type": "Workflow"
                                }
                              },
                              "foreach": "@variables('OrphanedApps')",
                              "runAfter": {},
                              "type": "Foreach"
                            },
                            "Assign_Each_Flow_to_New_Owner": {
                              "actions": {
                                "Check_if_reassignment_worked_flow": {
                                  "actions": {
                                    "Set_BulkOperationSuccess_to_false_AssignAllDone_flow": {
                                      "inputs": {
                                        "name": "BulkOperationSuccess",
                                        "value": "@false"
                                      },
                                      "runAfter": {},
                                      "type": "SetVariable"
                                    }
                                  },
                                  "expression": {
                                    "not": {
                                      "equals": [
                                        "@outputs('Reassign_This_One_Flow')?['Body']?['return']",
                                        "pass"
                                      ]
                                    }
                                  },
                                  "runAfter": {
                                    "Reassign_This_One_Flow": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Reassign_This_One_Flow": {
                                  "inputs": {
                                    "body": {
                                      "text": "@outputs('Get_toWhom_profile')?['body/id']",
                                      "text_1": "@items('Assign_Each_Flow_to_New_Owner')['FlowID']",
                                      "text_2": "@items('Assign_Each_Flow_to_New_Owner')['EnvtName']",
                                      "text_3": "assign"
                                    },
                                    "host": {
                                      "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                                    }
                                  },
                                  "runAfter": {},
                                  "type": "Workflow"
                                }
                              },
                              "foreach": "@variables('OrphanedFlows')",
                              "runAfter": {
                                "Assign_Each_App_to_New_Owner": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Let_them_know_if_objects_assigned_correctly": {
                              "actions": {
                                "Success_All_Objects_Assigned": {
                                  "inputs": {
                                    "authentication": "@parameters('$authentication')",
                                    "host": {
                                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                      "connectionName": "shared_teams",
                                      "operationId": "PostUserNotification"
                                    },
                                    "parameters": {
                                      "PostNotificationRequest/messageBody": "All objects assigned to @{outputs('Get_toWhom_profile')?['body/displayName']}",
                                      "PostNotificationRequest/messageTitle": "Success!",
                                      "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                    },
                                    "retryPolicy": {
                                      "count": 10,
                                      "interval": "PT10S",
                                      "type": "exponential"
                                    }
                                  },
                                  "runAfter": {},
                                  "type": "OpenApiConnection"
                                }
                              },
                              "else": {
                                "actions": {
                                  "Failed_to_Assign_Some_Objects": {
                                    "inputs": {
                                      "authentication": "@parameters('$authentication')",
                                      "host": {
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                        "connectionName": "shared_teams",
                                        "operationId": "PostUserNotification"
                                      },
                                      "parameters": {
                                        "PostNotificationRequest/messageBody": "Some objects could not be assigned to @{outputs('Get_toWhom_profile')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                        "PostNotificationRequest/messageTitle": "Error",
                                        "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                      },
                                      "retryPolicy": {
                                        "count": 10,
                                        "interval": "PT10S",
                                        "type": "exponential"
                                      }
                                    },
                                    "runAfter": {},
                                    "type": "OpenApiConnection"
                                  }
                                }
                              },
                              "expression": {
                                "equals": [
                                  "@variables('BulkOperationSuccess')",
                                  "@true"
                                ]
                              },
                              "runAfter": {
                                "Assign_Each_Flow_to_New_Owner": [
                                  "Succeeded"
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "case": 200
                        },
                        "404_Not_Found": {
                          "actions": {
                            "Post_a_message_as_the_Flow_bot_to_a_user_about_Bad_User": {
                              "inputs": {
                                "authentication": "@parameters('$authentication')",
                                "host": {
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                  "connectionName": "shared_teams",
                                  "operationId": "PostUserNotification"
                                },
                                "parameters": {
                                  "PostNotificationRequest/messageBody": "The user you entered did not resolve: @{body('Send_Table_For_Response')['toWhom']}\n\nYou will be asked again soon, and please enter a valid email adress for the new owner, in this format: @{triggerBody()['text']}",
                                  "PostNotificationRequest/messageTitle": "User did not resolve.",
                                  "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                },
                                "retryPolicy": {
                                  "count": 10,
                                  "interval": "PT10S",
                                  "type": "exponential"
                                }
                              },
                              "runAfter": {},
                              "type": "OpenApiConnection"
                            }
                          },
                          "case": 404
                        }
                      },
                      "default": {
                        "actions": {}
                      },
                      "expression": "@outputs('Get_toWhom_profile')['statusCode']",
                      "runAfter": {
                        "Get_toWhom_profile": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "type": "Switch"
                    }
                  },
                  "case": "AssignAllDone"
                },
                "Case_DeleteAll": {
                  "actions": {
                    "Delete_Each_Orphaned_App": {
                      "actions": {
                        "Check_if_delete_worked": {
                          "actions": {
                            "Set_BulkOperationSuccess_to_false": {
                              "inputs": {
                                "name": "BulkOperationSuccess",
                                "value": "@false"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@outputs('Delete_App')?['Body']?['return']",
                                "pass"
                              ]
                            }
                          },
                          "runAfter": {
                            "Delete_App": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Delete_App": {
                          "inputs": {
                            "body": {
                              "text": "not used",
                              "text_1": "@items('Delete_Each_Orphaned_App')['AppID']",
                              "text_2": "@items('Delete_Each_Orphaned_App')['EnvtName']",
                              "text_3": "delete"
                            },
                            "host": {
                              "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                            }
                          },
                          "runAfter": {},
                          "type": "Workflow"
                        }
                      },
                      "foreach": "@variables('OrphanedApps')",
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "Delete_Each_Orphaned_Flow": {
                      "actions": {
                        "Check_if_delete_worked_flow": {
                          "actions": {
                            "Set_BulkOperationSuccess_to_false_flow": {
                              "inputs": {
                                "name": "BulkOperationSuccess",
                                "value": "@false"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@outputs('Delete_Flow')?['Body']?['return']",
                                "pass"
                              ]
                            }
                          },
                          "runAfter": {
                            "Delete_Flow": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Delete_Flow": {
                          "inputs": {
                            "body": {
                              "text": "not used",
                              "text_1": "@items('Delete_Each_Orphaned_Flow')['FlowID']",
                              "text_2": "@items('Delete_Each_Orphaned_Flow')['EnvtName']",
                              "text_3": "delete"
                            },
                            "host": {
                              "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                            }
                          },
                          "runAfter": {},
                          "type": "Workflow"
                        }
                      },
                      "foreach": "@variables('OrphanedFlows')",
                      "runAfter": {
                        "Delete_Each_Orphaned_App": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Let_them_know_if_objects_deleted_correctly": {
                      "actions": {
                        "Success_All_Objects_Deleted": {
                          "inputs": {
                            "authentication": "@parameters('$authentication')",
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                              "connectionName": "shared_teams",
                              "operationId": "PostUserNotification"
                            },
                            "parameters": {
                              "PostNotificationRequest/messageBody": "All objects deleted",
                              "PostNotificationRequest/messageTitle": "Success!",
                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                            },
                            "retryPolicy": {
                              "count": 10,
                              "interval": "PT10S",
                              "type": "exponential"
                            }
                          },
                          "runAfter": {},
                          "type": "OpenApiConnection"
                        }
                      },
                      "else": {
                        "actions": {
                          "Failed_to_Delete_Some_Objects": {
                            "inputs": {
                              "authentication": "@parameters('$authentication')",
                              "host": {
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                "connectionName": "shared_teams",
                                "operationId": "PostUserNotification"
                              },
                              "parameters": {
                                "PostNotificationRequest/messageBody": "Some objects could not be deleted. \n@{if(greaterOrEquals(length(body('get_only_solution_aware_flows')), 1), 'One or more flows is in a solution and the entire solution will need deleted', '')}\n\nYou may need to seek help from your admin: \n@{parameters('Admin eMail')}",
                                "PostNotificationRequest/messageTitle": "Error",
                                "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                              },
                              "retryPolicy": {
                                "count": 10,
                                "interval": "PT10S",
                                "type": "exponential"
                              }
                            },
                            "runAfter": {
                              "get_only_solution_aware_flows": [
                                "Succeeded"
                              ]
                            },
                            "type": "OpenApiConnection"
                          },
                          "get_only_solution_aware_flows": {
                            "inputs": {
                              "from": "@body('Parse_Orphaned_Flows')",
                              "select": {
                                "@{item()['isSolnFlow']}": "@true"
                              }
                            },
                            "runAfter": {},
                            "type": "Select"
                          }
                        }
                      },
                      "expression": {
                        "equals": [
                          "@variables('BulkOperationSuccess')",
                          "@true"
                        ]
                      },
                      "runAfter": {
                        "Delete_Each_Orphaned_Flow": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "case": "DeleteAll"
                },
                "Case_EmailMe": {
                  "actions": {
                    "Send_list_to_manager": {
                      "inputs": {
                        "authentication": "@parameters('$authentication')",
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                          "connectionName": "shared_office365",
                          "operationId": "SendEmailV2"
                        },
                        "parameters": {
                          "emailMessage/Body": "<p>Thank you for looking through these orphaned objects from your former employees. Please prepare a plan for each, to see if you would like to take ownership, assign to another person, or delete.<br>\n<br>\n<u><strong>Apps<br>\n</strong></u>@{body('Create_HTML_table_OrphanedApps')}<u><br>\n</u><u><strong><br>\nFlows<br>\n</strong></u>@{body('Create_HTML_table_OrphanedFlows')}</p>",
                          "emailMessage/Subject": "Orphaned Objects to Clean",
                          "emailMessage/To": "@triggerBody()['text']"
                        },
                        "retryPolicy": {
                          "count": 10,
                          "interval": "PT10S",
                          "type": "exponential"
                        }
                      },
                      "runAfter": {},
                      "type": "OpenApiConnection"
                    },
                    "Tell_manager_email_of_list_was_sent": {
                      "inputs": {
                        "authentication": "@parameters('$authentication')",
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                          "connectionName": "shared_teams",
                          "operationId": "PostUserNotification"
                        },
                        "parameters": {
                          "PostNotificationRequest/messageBody": "Email has been sent",
                          "PostNotificationRequest/messageTitle": "Email Sent",
                          "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                        },
                        "retryPolicy": {
                          "count": 10,
                          "interval": "PT10S",
                          "type": "exponential"
                        }
                      },
                      "runAfter": {
                        "Send_list_to_manager": [
                          "Succeeded"
                        ]
                      },
                      "type": "OpenApiConnection"
                    }
                  },
                  "case": "EmailMe"
                },
                "Case_See_Each": {
                  "actions": {
                    "Show_Each_App_Separately": {
                      "actions": {
                        "Card_Content": {
                          "inputs": {
                            "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                            "body": [
                              {
                                "text": "Environment: @{items('Show_Each_App_Separately')['EnvtDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "App Name: @{items('Show_Each_App_Separately')['AppDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Previous Owner: @{items('Show_Each_App_Separately')['OwnerDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Last Modified: @{items('Show_Each_App_Separately')['LastModified']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Last Launched: @{items('Show_Each_App_Separately')['LastLaunched']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "actions": [
                                  {
                                    "id": "TakeIt",
                                    "style": "positive",
                                    "title": "Take Ownership",
                                    "type": "Action.Submit"
                                  },
                                  {
                                    "id": "DeleteIt",
                                    "title": "Delete",
                                    "type": "Action.Submit"
                                  },
                                  {
                                    "card": {
                                      "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                      "actions": [
                                        {
                                          "id": "AssignItlDone",
                                          "title": "Assign Now",
                                          "type": "Action.Submit"
                                        }
                                      ],
                                      "body": [
                                        {
                                          "id": "toWhom",
                                          "placeholder": "AssignToWhom@example.com",
                                          "spacing": "None",
                                          "style": "Email",
                                          "type": "Input.Text"
                                        }
                                      ],
                                      "type": "AdaptiveCard"
                                    },
                                    "id": "AssignIt",
                                    "title": "Assign Ownership",
                                    "type": "Action.ShowCard"
                                  },
                                  {
                                    "id": "SkipIt",
                                    "title": "Skip",
                                    "type": "Action.Submit"
                                  }
                                ],
                                "type": "ActionSet"
                              }
                            ],
                            "type": "AdaptiveCard",
                            "version": "1.2"
                          },
                          "runAfter": {
                            "Reset_TimedOut": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose"
                        },
                        "If_app_not_timed_out": {
                          "actions": {
                            "Switch_app_submitActionId": {
                              "cases": {
                                "AssignItlDone": {
                                  "actions": {
                                    "Get_toWhom_profile_-_app": {
                                      "inputs": {
                                        "authentication": "@parameters('$authentication')",
                                        "host": {
                                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users",
                                          "connectionName": "shared_office365users",
                                          "operationId": "UserProfile_V2"
                                        },
                                        "parameters": {
                                          "id": "@outputs('SendAppForResponses')?['body/data/toWhom']"
                                        },
                                        "retryPolicy": {
                                          "count": 10,
                                          "interval": "PT10S",
                                          "type": "exponential"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "OpenApiConnection"
                                    },
                                    "Switch_on_toWhom_lookup_-_app": {
                                      "cases": {
                                        "200_Success": {
                                          "actions": {
                                            "Assign_App_toWhom": {
                                              "inputs": {
                                                "body": {
                                                  "text": "@outputs('Get_toWhom_profile_-_app')?['body/id']",
                                                  "text_1": "@items('Show_Each_App_Separately')['AppID']",
                                                  "text_2": "@items('Show_Each_App_Separately')['EnvtName']",
                                                  "text_3": "assign"
                                                },
                                                "host": {
                                                  "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                                                }
                                              },
                                              "runAfter": {},
                                              "type": "Workflow"
                                            },
                                            "Let_them_know_if_it_succeeded_-_assign_app_toWhom": {
                                              "actions": {
                                                "Success_App_Assigned_toWhom": {
                                                  "inputs": {
                                                    "authentication": "@parameters('$authentication')",
                                                    "host": {
                                                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                      "connectionName": "shared_teams",
                                                      "operationId": "PostUserNotification"
                                                    },
                                                    "parameters": {
                                                      "PostNotificationRequest/messageBody": "@{outputs('Get_toWhom_profile_-_app')?['body/displayName']} now owns @{items('Show_Each_App_Separately')['AppDisplayName']}",
                                                      "PostNotificationRequest/messageTitle": "Success!",
                                                      "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                    },
                                                    "retryPolicy": {
                                                      "count": 10,
                                                      "interval": "PT10S",
                                                      "type": "exponential"
                                                    }
                                                  },
                                                  "runAfter": {},
                                                  "type": "OpenApiConnection"
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Failed_to_Assign_App_toWhom": {
                                                    "inputs": {
                                                      "authentication": "@parameters('$authentication')",
                                                      "host": {
                                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                        "connectionName": "shared_teams",
                                                        "operationId": "PostUserNotification"
                                                      },
                                                      "parameters": {
                                                        "PostNotificationRequest/messageBody": "@{items('Show_Each_App_Separately')['AppDisplayName']} could not be assigned to @{outputs('Get_toWhom_profile_-_app')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                                        "PostNotificationRequest/messageTitle": "Error",
                                                        "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                      },
                                                      "retryPolicy": {
                                                        "count": 10,
                                                        "interval": "PT10S",
                                                        "type": "exponential"
                                                      }
                                                    },
                                                    "runAfter": {},
                                                    "type": "OpenApiConnection"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "equals": [
                                                  "@outputs('Assign_App_toWhom')?['Body']?['return']",
                                                  "pass"
                                                ]
                                              },
                                              "runAfter": {
                                                "Assign_App_toWhom": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          },
                                          "case": 200
                                        },
                                        "404_Not_Found": {
                                          "actions": {
                                            "Post_a_message_as_the_Flow_bot_to_a_user_about_Bad_User_-_app": {
                                              "inputs": {
                                                "authentication": "@parameters('$authentication')",
                                                "host": {
                                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                  "connectionName": "shared_teams",
                                                  "operationId": "PostUserNotification"
                                                },
                                                "parameters": {
                                                  "PostNotificationRequest/messageBody": "The user you entered did not resolve: @{outputs('SendAppForResponses')?['body/data/toWhom']}\n\nYou will be asked again soon, and please enter a valid email adress for the new owner, in this format: @{triggerBody()['text']}",
                                                  "PostNotificationRequest/messageTitle": "User did not resolve",
                                                  "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                },
                                                "retryPolicy": {
                                                  "count": 10,
                                                  "interval": "PT10S",
                                                  "type": "exponential"
                                                }
                                              },
                                              "runAfter": {},
                                              "type": "OpenApiConnection"
                                            }
                                          },
                                          "case": 404
                                        }
                                      },
                                      "default": {
                                        "actions": {}
                                      },
                                      "expression": "@outputs('Get_toWhom_profile_-_app')['statusCode']",
                                      "runAfter": {
                                        "Get_toWhom_profile_-_app": [
                                          "Succeeded",
                                          "Failed"
                                        ]
                                      },
                                      "type": "Switch"
                                    }
                                  },
                                  "case": "AssignItlDone"
                                },
                                "DeleteIt": {
                                  "actions": {
                                    "Delete_This_App": {
                                      "inputs": {
                                        "body": {
                                          "text": "Not Used",
                                          "text_1": "@items('Show_Each_App_Separately')['AppID']",
                                          "text_2": "@items('Show_Each_App_Separately')['EnvtName']",
                                          "text_3": "delete"
                                        },
                                        "host": {
                                          "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "Workflow"
                                    },
                                    "Let_them_know_if_it_succeeded_-_delete_this_app": {
                                      "actions": {
                                        "Success_Delete_App": {
                                          "inputs": {
                                            "authentication": "@parameters('$authentication')",
                                            "host": {
                                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                              "connectionName": "shared_teams",
                                              "operationId": "PostUserNotification"
                                            },
                                            "parameters": {
                                              "PostNotificationRequest/messageBody": "@{items('Show_Each_App_Separately')['AppDisplayName']} deleted",
                                              "PostNotificationRequest/messageTitle": "Success!",
                                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                            },
                                            "retryPolicy": {
                                              "count": 10,
                                              "interval": "PT10S",
                                              "type": "exponential"
                                            }
                                          },
                                          "runAfter": {},
                                          "type": "OpenApiConnection"
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Failed_Delete_App": {
                                            "inputs": {
                                              "authentication": "@parameters('$authentication')",
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                "connectionName": "shared_teams",
                                                "operationId": "PostUserNotification"
                                              },
                                              "parameters": {
                                                "PostNotificationRequest/messageBody": "Could not delete @{items('Show_Each_App_Separately')['AppDisplayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                                "PostNotificationRequest/messageTitle": "Error",
                                                "PostNotificationRequest/recipient/to": "@triggerBody()['text']"
                                              },
                                              "retryPolicy": {
                                                "count": 10,
                                                "interval": "PT10S",
                                                "type": "exponential"
                                              }
                                            },
                                            "runAfter": {},
                                            "type": "OpenApiConnection"
                                          }
                                        }
                                      },
                                      "expression": {
                                        "equals": [
                                          "@outputs('Delete_This_App')?['Body']?['return']",
                                          "pass"
                                        ]
                                      },
                                      "runAfter": {
                                        "Delete_This_App": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "case": "DeleteIt"
                                },
                                "SkipIt": {
                                  "actions": {
                                    "Skip_this_one": {
                                      "inputs": {
                                        "authentication": "@parameters('$authentication')",
                                        "host": {
                                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                          "connectionName": "shared_teams",
                                          "operationId": "PostUserNotification"
                                        },
                                        "parameters": {
                                          "PostNotificationRequest/messageBody": "Moving to the next one.",
                                          "PostNotificationRequest/messageTitle": "Skipped",
                                          "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                        },
                                        "retryPolicy": {
                                          "count": 10,
                                          "interval": "PT10S",
                                          "type": "exponential"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "OpenApiConnection"
                                    }
                                  },
                                  "case": "SkipIt"
                                },
                                "TakeIt": {
                                  "actions": {
                                    "Assign_App_to_Manager": {
                                      "inputs": {
                                        "body": {
                                          "text": "@outputs('Get_managers_id')?['body/id']",
                                          "text_1": "@items('Show_Each_App_Separately')['AppID']",
                                          "text_2": "@items('Show_Each_App_Separately')['EnvtName']",
                                          "text_3": "assign"
                                        },
                                        "host": {
                                          "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "Workflow"
                                    },
                                    "Let_them_know_if_it_succeeded_-_assign_app_to_manager": {
                                      "actions": {
                                        "Success_App_Assigned_to_Manager": {
                                          "inputs": {
                                            "authentication": "@parameters('$authentication')",
                                            "host": {
                                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                              "connectionName": "shared_teams",
                                              "operationId": "PostUserNotification"
                                            },
                                            "parameters": {
                                              "PostNotificationRequest/messageBody": "@{outputs('Get_managers_id')?['body/displayName']} now owns @{items('Show_Each_App_Separately')['AppDisplayName']}",
                                              "PostNotificationRequest/messageTitle": "Success! ",
                                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                            },
                                            "retryPolicy": {
                                              "count": 10,
                                              "interval": "PT10S",
                                              "type": "exponential"
                                            }
                                          },
                                          "runAfter": {},
                                          "type": "OpenApiConnection"
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Failed_to_Assign_App_to_Manager": {
                                            "inputs": {
                                              "authentication": "@parameters('$authentication')",
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                "connectionName": "shared_teams",
                                                "operationId": "PostUserNotification"
                                              },
                                              "parameters": {
                                                "PostNotificationRequest/messageBody": "@{items('Show_Each_App_Separately')['AppDisplayName']} could not be assigned to @{outputs('Get_managers_id')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                                "PostNotificationRequest/messageTitle": "Error",
                                                "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                              },
                                              "retryPolicy": {
                                                "count": 10,
                                                "interval": "PT10S",
                                                "type": "exponential"
                                              }
                                            },
                                            "runAfter": {},
                                            "type": "OpenApiConnection"
                                          }
                                        }
                                      },
                                      "expression": {
                                        "equals": [
                                          "@outputs('Assign_App_to_Manager')?['Body']?['return']",
                                          "pass"
                                        ]
                                      },
                                      "runAfter": {
                                        "Assign_App_to_Manager": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "case": "TakeIt"
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('SendAppForResponses')['submitActionId']",
                              "runAfter": {},
                              "type": "Switch"
                            }
                          },
                          "else": {
                            "actions": {
                              "Post_a_time_message_as_the_Flow_bot_to_a_user_for_this_app": {
                                "inputs": {
                                  "authentication": "@parameters('$authentication')",
                                  "host": {
                                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                    "connectionName": "shared_teams",
                                    "operationId": "PostUserNotification"
                                  },
                                  "parameters": {
                                    "PostNotificationRequest/messageBody": "The above request has timed out or failed, and any responses given will not be recorded.\nYou will be asked again. Thank you.",
                                    "PostNotificationRequest/messageTitle": "Request Timed Out or Failed",
                                    "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                  },
                                  "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT10S",
                                    "type": "exponential"
                                  }
                                },
                                "runAfter": {},
                                "type": "OpenApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "equals": [
                              "@variables('timedOutOrFailed')",
                              "@false"
                            ]
                          },
                          "runAfter": {
                            "Set_timedOut_if_true": [
                              "Succeeded",
                              "Skipped"
                            ]
                          },
                          "type": "If"
                        },
                        "Reset_TimedOut": {
                          "inputs": {
                            "name": "timedOutOrFailed",
                            "value": "@false"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                        },
                        "SendAppForResponses": {
                          "inputs": {
                            "authentication": "@parameters('$authentication')",
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                              "connectionName": "shared_teams",
                              "operationId": "SubscribeUserFlowContinuation"
                            },
                            "parameters": {
                              "UserFlowContinuationSubscriptionRequest/body/messageBody": "@outputs('Card_Content')",
                              "UserFlowContinuationSubscriptionRequest/body/recipient/to": "@{triggerBody()['text']};",
                              "UserFlowContinuationSubscriptionRequest/body/shouldUpdateCard": true,
                              "UserFlowContinuationSubscriptionRequest/body/updateMessage": "Trying that now..."
                            },
                            "retryPolicy": {
                              "count": 10,
                              "interval": "PT10S",
                              "type": "exponential"
                            }
                          },
                          "limit": {
                            "timeout": "PT10M"
                          },
                          "runAfter": {
                            "Card_Content": [
                              "Succeeded"
                            ]
                          },
                          "type": "OpenApiConnectionWebhook"
                        },
                        "Set_timedOut_if_true": {
                          "inputs": {
                            "name": "timedOutOrFailed",
                            "value": "@true"
                          },
                          "runAfter": {
                            "SendAppForResponses": [
                              "TimedOut",
                              "Failed"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "foreach": "@body('Parse_Orphaned_Apps')",
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "Show_Each_Flow_Separately": {
                      "actions": {
                        "Card_Content_flow": {
                          "inputs": {
                            "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                            "body": [
                              {
                                "text": "Environment: @{items('Show_Each_Flow_Separately')['EnvtDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Flow Name: @{items('Show_Each_Flow_Separately')['FlowDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Previous Owner: @{items('Show_Each_Flow_Separately')['OwnerDisplayName']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Last Modified: @{items('Show_Each_Flow_Separately')['LastModified']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "text": "Flow State: @{items('Show_Each_Flow_Separately')['FlowState']}",
                                "type": "TextBlock",
                                "weight": "Bolder",
                                "wrap": true
                              },
                              {
                                "actions": [
                                  {
                                    "id": "TakeIt",
                                    "style": "positive",
                                    "title": "Take Ownership",
                                    "type": "Action.Submit"
                                  },
                                  {
                                    "id": "DeleteIt",
                                    "title": "Delete",
                                    "type": "Action.Submit"
                                  },
                                  {
                                    "card": {
                                      "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                      "actions": [
                                        {
                                          "id": "AssignItlDone",
                                          "title": "Assign Now",
                                          "type": "Action.Submit"
                                        }
                                      ],
                                      "body": [
                                        {
                                          "id": "toWhom",
                                          "placeholder": "AssignToWhom@example.com",
                                          "spacing": "None",
                                          "style": "Email",
                                          "type": "Input.Text"
                                        }
                                      ],
                                      "type": "AdaptiveCard"
                                    },
                                    "id": "AssignIt",
                                    "title": "Assign Out",
                                    "type": "Action.ShowCard"
                                  },
                                  {
                                    "id": "SkipIt",
                                    "title": "Skip",
                                    "type": "Action.Submit"
                                  }
                                ],
                                "type": "ActionSet"
                              }
                            ],
                            "type": "AdaptiveCard",
                            "version": "1.2"
                          },
                          "runAfter": {
                            "Reset_TimedOut_flow": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose"
                        },
                        "If_app_not_timed_out_flow": {
                          "actions": {
                            "Switch_flow_submitActionId": {
                              "cases": {
                                "AssignItlDone": {
                                  "actions": {
                                    "Get_toWhom_profile_-_flow": {
                                      "inputs": {
                                        "authentication": "@parameters('$authentication')",
                                        "host": {
                                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users",
                                          "connectionName": "shared_office365users",
                                          "operationId": "UserProfile_V2"
                                        },
                                        "parameters": {
                                          "id": "@outputs('SendAppForResponses_flow')?['body/data/toWhom']"
                                        },
                                        "retryPolicy": {
                                          "count": 10,
                                          "interval": "PT10S",
                                          "type": "exponential"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "OpenApiConnection"
                                    },
                                    "Switch_on_toWhom_lookup_-_flow": {
                                      "cases": {
                                        "200_Success": {
                                          "actions": {
                                            "Assign_Flow_toWhom": {
                                              "inputs": {
                                                "body": {
                                                  "text": "@outputs('Get_toWhom_profile_-_flow')?['body/id']",
                                                  "text_1": "@items('Show_Each_Flow_Separately')['FlowID']",
                                                  "text_2": "@items('Show_Each_Flow_Separately')['EnvtName']",
                                                  "text_3": "assign"
                                                },
                                                "host": {
                                                  "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                                                }
                                              },
                                              "runAfter": {},
                                              "type": "Workflow"
                                            },
                                            "Let_them_know_if_it_succeeded_-_assign_flow_toWhom": {
                                              "actions": {
                                                "Success_Flow_Assigned_toWhom": {
                                                  "inputs": {
                                                    "authentication": "@parameters('$authentication')",
                                                    "host": {
                                                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                      "connectionName": "shared_teams",
                                                      "operationId": "PostUserNotification"
                                                    },
                                                    "parameters": {
                                                      "PostNotificationRequest/messageBody": "@{outputs('Get_toWhom_profile_-_flow')?['body/displayName']} now owns @{items('Show_Each_Flow_Separately')['FlowDisplayName']}",
                                                      "PostNotificationRequest/messageTitle": "Success!",
                                                      "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                    },
                                                    "retryPolicy": {
                                                      "count": 10,
                                                      "interval": "PT10S",
                                                      "type": "exponential"
                                                    }
                                                  },
                                                  "runAfter": {},
                                                  "type": "OpenApiConnection"
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Failed_to_Assign_Flow_toWhom": {
                                                    "inputs": {
                                                      "authentication": "@parameters('$authentication')",
                                                      "host": {
                                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                        "connectionName": "shared_teams",
                                                        "operationId": "PostUserNotification"
                                                      },
                                                      "parameters": {
                                                        "PostNotificationRequest/messageBody": "@{items('Show_Each_Flow_Separately')['FlowDisplayName']} could not be assigned to @{outputs('Get_toWhom_profile_-_flow')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                                        "PostNotificationRequest/messageTitle": "Error",
                                                        "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                      },
                                                      "retryPolicy": {
                                                        "count": 10,
                                                        "interval": "PT10S",
                                                        "type": "exponential"
                                                      }
                                                    },
                                                    "runAfter": {},
                                                    "type": "OpenApiConnection"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "equals": [
                                                  "@outputs('Assign_Flow_toWhom')?['Body']?['return']",
                                                  "pass"
                                                ]
                                              },
                                              "runAfter": {
                                                "Assign_Flow_toWhom": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          },
                                          "case": 200
                                        },
                                        "404_Not_Found": {
                                          "actions": {
                                            "Post_a_message_as_the_Flow_bot_to_a_user_about_Bad_User_-_flow": {
                                              "inputs": {
                                                "authentication": "@parameters('$authentication')",
                                                "host": {
                                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                  "connectionName": "shared_teams",
                                                  "operationId": "PostUserNotification"
                                                },
                                                "parameters": {
                                                  "PostNotificationRequest/messageBody": "The user you entered did not resolve: @{outputs('SendAppForResponses_flow')?['body/data/toWhom']}\n\nYou will be asked again soon, and please enter a valid email adress for the new owner, in this format: @{triggerBody()['text']}",
                                                  "PostNotificationRequest/messageTitle": "User did not resolve",
                                                  "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                                },
                                                "retryPolicy": {
                                                  "count": 10,
                                                  "interval": "PT10S",
                                                  "type": "exponential"
                                                }
                                              },
                                              "runAfter": {},
                                              "type": "OpenApiConnection"
                                            }
                                          },
                                          "case": 404
                                        }
                                      },
                                      "default": {
                                        "actions": {}
                                      },
                                      "expression": "@outputs('Get_toWhom_profile_-_flow')['statusCode']",
                                      "runAfter": {
                                        "Get_toWhom_profile_-_flow": [
                                          "Succeeded",
                                          "Failed"
                                        ]
                                      },
                                      "type": "Switch"
                                    }
                                  },
                                  "case": "AssignItlDone"
                                },
                                "DeleteIt": {
                                  "actions": {
                                    "Delete_This_Flow": {
                                      "inputs": {
                                        "body": {
                                          "text": "notused",
                                          "text_1": "@items('Show_Each_Flow_Separately')['FlowID']",
                                          "text_2": "@items('Show_Each_Flow_Separately')['EnvtName']",
                                          "text_3": "delete"
                                        },
                                        "host": {
                                          "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "Workflow"
                                    },
                                    "Let_them_know_if_it_succeeded_-_delete_this_flow": {
                                      "actions": {
                                        "Success_Delete_Flow": {
                                          "inputs": {
                                            "authentication": "@parameters('$authentication')",
                                            "host": {
                                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                              "connectionName": "shared_teams",
                                              "operationId": "PostUserNotification"
                                            },
                                            "parameters": {
                                              "PostNotificationRequest/messageBody": "@{items('Show_Each_Flow_Separately')['FlowDisplayName']} deleted",
                                              "PostNotificationRequest/messageTitle": "Success!",
                                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                            },
                                            "retryPolicy": {
                                              "count": 10,
                                              "interval": "PT10S",
                                              "type": "exponential"
                                            }
                                          },
                                          "runAfter": {},
                                          "type": "OpenApiConnection"
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Failed_Delete_Flow": {
                                            "inputs": {
                                              "authentication": "@parameters('$authentication')",
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                "connectionName": "shared_teams",
                                                "operationId": "PostUserNotification"
                                              },
                                              "parameters": {
                                                "PostNotificationRequest/messageBody": "Could not delete @{items('Show_Each_Flow_Separately')['FlowDisplayName']}.\n@{if(items('Show_Each_Flow_Separately')['isSolnFlow'], 'This flow is in a solution and the entire solution will need deleted', '')}\nYou may need to seek help from your admin: \n@{parameters('Admin eMail')}",
                                                "PostNotificationRequest/messageTitle": "Error",
                                                "PostNotificationRequest/recipient/to": "@triggerBody()['text']"
                                              },
                                              "retryPolicy": {
                                                "count": 10,
                                                "interval": "PT10S",
                                                "type": "exponential"
                                              }
                                            },
                                            "runAfter": {},
                                            "type": "OpenApiConnection"
                                          }
                                        }
                                      },
                                      "expression": {
                                        "equals": [
                                          "@outputs('Delete_This_Flow')?['Body']?['return']",
                                          "pass"
                                        ]
                                      },
                                      "runAfter": {
                                        "Delete_This_Flow": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "case": "DeleteIt"
                                },
                                "SkipIt": {
                                  "actions": {
                                    "Skip_this_flow": {
                                      "inputs": {
                                        "authentication": "@parameters('$authentication')",
                                        "host": {
                                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                          "connectionName": "shared_teams",
                                          "operationId": "PostUserNotification"
                                        },
                                        "parameters": {
                                          "PostNotificationRequest/messageBody": "Moving to the next one.",
                                          "PostNotificationRequest/messageTitle": "Skipped",
                                          "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                        },
                                        "retryPolicy": {
                                          "count": 10,
                                          "interval": "PT10S",
                                          "type": "exponential"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "OpenApiConnection"
                                    }
                                  },
                                  "case": "SkipIt"
                                },
                                "TakeIt": {
                                  "actions": {
                                    "Assign_Flow_to_Manager": {
                                      "inputs": {
                                        "body": {
                                          "text": "@outputs('Get_managers_id')?['body/id']",
                                          "text_1": "@items('Show_Each_Flow_Separately')['FlowID']",
                                          "text_2": "@items('Show_Each_Flow_Separately')['EnvtName']",
                                          "text_3": "assign"
                                        },
                                        "host": {
                                          "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "Workflow"
                                    },
                                    "Let_them_know_if_it_succeeded_-_assign_flow_to_manager": {
                                      "actions": {
                                        "Success_Flow_Assigned_to_Manager": {
                                          "inputs": {
                                            "authentication": "@parameters('$authentication')",
                                            "host": {
                                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                              "connectionName": "shared_teams",
                                              "operationId": "PostUserNotification"
                                            },
                                            "parameters": {
                                              "PostNotificationRequest/messageBody": "@{outputs('Get_managers_id')?['body/displayName']} now owns @{items('Show_Each_Flow_Separately')['FlowDisplayName']}",
                                              "PostNotificationRequest/messageTitle": "Success! ",
                                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                            },
                                            "retryPolicy": {
                                              "count": 10,
                                              "interval": "PT10S",
                                              "type": "exponential"
                                            }
                                          },
                                          "runAfter": {},
                                          "type": "OpenApiConnection"
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Failed_to_Assign_Flow_to_Manager": {
                                            "inputs": {
                                              "authentication": "@parameters('$authentication')",
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                                "connectionName": "shared_teams",
                                                "operationId": "PostUserNotification"
                                              },
                                              "parameters": {
                                                "PostNotificationRequest/messageBody": "@{items('Show_Each_Flow_Separately')['FlowDisplayName']} could not be assigned to @{outputs('Get_managers_id')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                                "PostNotificationRequest/messageTitle": "Error",
                                                "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                              },
                                              "retryPolicy": {
                                                "count": 10,
                                                "interval": "PT10S",
                                                "type": "exponential"
                                              }
                                            },
                                            "runAfter": {},
                                            "type": "OpenApiConnection"
                                          }
                                        }
                                      },
                                      "expression": {
                                        "equals": [
                                          "@outputs('Assign_Flow_to_Manager')?['Body']?['return']",
                                          "pass"
                                        ]
                                      },
                                      "runAfter": {
                                        "Assign_Flow_to_Manager": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "case": "TakeIt"
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('SendAppForResponses_flow')['submitActionId']",
                              "runAfter": {},
                              "type": "Switch"
                            }
                          },
                          "else": {
                            "actions": {
                              "Post_a_time_message_as_the_Flow_bot_to_a_user_for_this_flow": {
                                "inputs": {
                                  "authentication": "@parameters('$authentication')",
                                  "host": {
                                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                    "connectionName": "shared_teams",
                                    "operationId": "PostUserNotification"
                                  },
                                  "parameters": {
                                    "PostNotificationRequest/messageBody": "The above request has timed out or failed, and any responses given will not be recorded.\nYou will be asked again. Thank you.",
                                    "PostNotificationRequest/messageTitle": "Request Timed Out or Failed",
                                    "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                                  },
                                  "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT10S",
                                    "type": "exponential"
                                  }
                                },
                                "runAfter": {},
                                "type": "OpenApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "equals": [
                              "@variables('timedOutOrFailed')",
                              "@false"
                            ]
                          },
                          "runAfter": {
                            "Set_timedOut_if_true_flow": [
                              "Succeeded",
                              "Skipped"
                            ]
                          },
                          "type": "If"
                        },
                        "Reset_TimedOut_flow": {
                          "inputs": {
                            "name": "timedOutOrFailed",
                            "value": "@false"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                        },
                        "SendAppForResponses_flow": {
                          "inputs": {
                            "authentication": "@parameters('$authentication')",
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                              "connectionName": "shared_teams",
                              "operationId": "SubscribeUserFlowContinuation"
                            },
                            "parameters": {
                              "UserFlowContinuationSubscriptionRequest/body/messageBody": "@outputs('Card_Content_flow')",
                              "UserFlowContinuationSubscriptionRequest/body/recipient/to": "@{triggerBody()['text']};",
                              "UserFlowContinuationSubscriptionRequest/body/shouldUpdateCard": true,
                              "UserFlowContinuationSubscriptionRequest/body/updateMessage": "Trying that now..."
                            },
                            "retryPolicy": {
                              "count": 10,
                              "interval": "PT10S",
                              "type": "exponential"
                            }
                          },
                          "limit": {
                            "timeout": "PT10M"
                          },
                          "runAfter": {
                            "Card_Content_flow": [
                              "Succeeded"
                            ]
                          },
                          "type": "OpenApiConnectionWebhook"
                        },
                        "Set_timedOut_if_true_flow": {
                          "inputs": {
                            "name": "timedOutOrFailed",
                            "value": "@true"
                          },
                          "runAfter": {
                            "SendAppForResponses_flow": [
                              "TimedOut",
                              "Failed"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "foreach": "@body('Parse_Orphaned_Flows')",
                      "runAfter": {
                        "Show_Each_App_Separately": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "case": "SeeEach"
                },
                "Case_Take_Ownership": {
                  "actions": {
                    "Assign_Each_App_to_Manager": {
                      "actions": {
                        "Check_if_reassignment_to_self_worked": {
                          "actions": {
                            "Set_BulkOperationSuccess_to_false_manager": {
                              "inputs": {
                                "name": "BulkOperationSuccess",
                                "value": "@false"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@outputs('Reassign_This_One_to_Manager')?['Body']?['return']",
                                "pass"
                              ]
                            }
                          },
                          "runAfter": {
                            "Reassign_This_One_to_Manager": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Reassign_This_One_to_Manager": {
                          "inputs": {
                            "body": {
                              "text": "@outputs('Get_managers_id')?['body/id']",
                              "text_1": "@items('Assign_Each_App_to_Manager')['AppID']",
                              "text_2": "@items('Assign_Each_App_to_Manager')['EnvtName']",
                              "text_3": "assign"
                            },
                            "host": {
                              "workflowReferenceName": "ab3784ff-ceef-eb11-bacb-00224820693c"
                            }
                          },
                          "runAfter": {},
                          "type": "Workflow"
                        }
                      },
                      "foreach": "@variables('OrphanedApps')",
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "Assign_Each_Flow_to_Manager": {
                      "actions": {
                        "Check_if_reassignment_to_self_worked_flows": {
                          "actions": {
                            "Set_BulkOperationSuccess_to_false_manager_flow": {
                              "inputs": {
                                "name": "BulkOperationSuccess",
                                "value": "@false"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@outputs('Reassign_This_Flow_to_Manager')?['Body']?['return']",
                                "pass"
                              ]
                            }
                          },
                          "runAfter": {
                            "Reassign_This_Flow_to_Manager": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Reassign_This_Flow_to_Manager": {
                          "inputs": {
                            "body": {
                              "text": "@outputs('Get_managers_id')?['body/id']",
                              "text_1": "@items('Assign_Each_Flow_to_Manager')['FlowID']",
                              "text_2": "@items('Assign_Each_Flow_to_Manager')['EnvtName']",
                              "text_3": "assign"
                            },
                            "host": {
                              "workflowReferenceName": "b538d20c-d1ef-eb11-bacb-00224820693c"
                            }
                          },
                          "runAfter": {},
                          "type": "Workflow"
                        }
                      },
                      "foreach": "@variables('OrphanedFlows')",
                      "runAfter": {
                        "Assign_Each_App_to_Manager": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Let_them_know_if_objects_assigned_correctly_to_self": {
                      "actions": {
                        "Success_All_Objects_Assigned_to_Manager": {
                          "inputs": {
                            "authentication": "@parameters('$authentication')",
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                              "connectionName": "shared_teams",
                              "operationId": "PostUserNotification"
                            },
                            "parameters": {
                              "PostNotificationRequest/messageBody": "All objects assigned to @{outputs('Get_managers_id')?['body/displayName']}",
                              "PostNotificationRequest/messageTitle": "Success!",
                              "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                            },
                            "retryPolicy": {
                              "count": 10,
                              "interval": "PT10S",
                              "type": "exponential"
                            }
                          },
                          "runAfter": {},
                          "type": "OpenApiConnection"
                        }
                      },
                      "else": {
                        "actions": {
                          "Failed_to_Assign_Some_Objects_to_Manager": {
                            "inputs": {
                              "authentication": "@parameters('$authentication')",
                              "host": {
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                                "connectionName": "shared_teams",
                                "operationId": "PostUserNotification"
                              },
                              "parameters": {
                                "PostNotificationRequest/messageBody": "Some objects could not be assigned to @{outputs('Get_managers_id')?['body/displayName']}.\n\nYou may need to seek help from your admin: \n\n@{parameters('Admin eMail')}",
                                "PostNotificationRequest/messageTitle": "Error",
                                "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                              },
                              "retryPolicy": {
                                "count": 10,
                                "interval": "PT10S",
                                "type": "exponential"
                              }
                            },
                            "runAfter": {},
                            "type": "OpenApiConnection"
                          }
                        }
                      },
                      "expression": {
                        "equals": [
                          "@variables('BulkOperationSuccess')",
                          "@true"
                        ]
                      },
                      "runAfter": {
                        "Assign_Each_Flow_to_Manager": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "case": "TakeOwnership"
                }
              },
              "default": {
                "actions": {}
              },
              "expression": "@body('Send_Table_For_Response')['submitActionId']",
              "metadata": {
                "operationMetadataId": "4a734f1a-f56f-40fc-ad44-90646ad19a1c"
              },
              "runAfter": {},
              "type": "Switch"
            }
          },
          "else": {
            "actions": {
              "Post_a_timeout_message_as_the_Flow_bot_to_a_user": {
                "inputs": {
                  "authentication": "@parameters('$authentication')",
                  "host": {
                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                    "connectionName": "shared_teams",
                    "operationId": "PostUserNotification"
                  },
                  "parameters": {
                    "PostNotificationRequest/messageBody": "The request to resolve orphaned objechas timed out or failed, and any responses given now will not be recorded.\nYou will be emailed and asked again. Thank you.",
                    "PostNotificationRequest/messageTitle": "Request has timed out or failed",
                    "PostNotificationRequest/recipient/isAlert": false,
                    "PostNotificationRequest/recipient/to": "@{triggerBody()['text']};"
                  },
                  "retryPolicy": {
                    "count": 10,
                    "interval": "PT10S",
                    "type": "exponential"
                  }
                },
                "metadata": {
                  "operationMetadataId": "5941704e-1841-49a1-a257-a4a070a4d0c4"
                },
                "runAfter": {},
                "type": "OpenApiConnection"
              },
              "Send_list_to_admin_-_failed_or_timed_out": {
                "inputs": {
                  "authentication": "@parameters('$authentication')",
                  "host": {
                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                    "connectionName": "shared_office365",
                    "operationId": "SendEmailV2"
                  },
                  "parameters": {
                    "emailMessage/Body": "<p>The request to this manager failed or timed out. <br>\n<br>\nIf timed out, consider reaching out to them to ensure they understand the importance of this work. <br>\n<br>\nIf failed it may be due to the number of objects being too large for the adaptive card, you will need to work with them to resolve, or just assign all objects to them. <br>\nOr it could be due to other reasons like them blocking conversations with the flow bot. <br>\n<br>\nPlease look at the run to see what occurred, and the list of objects, to determine how best to proceed.<br>\n<br>\n<u><strong>Manager</strong></u>: @{triggerBody()['text']}<br>\n<u><strong>See run</strong></u>: <a href='@{concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])}'>Click here</a><br>\n<br>\n <u><strong>Apps<br>\n</strong></u>@{body('Create_HTML_table_OrphanedApps')}<u><br>\n</u><u><strong><br>\nFlows<br>\n</strong></u>@{body('Create_HTML_table_OrphanedFlows')}</p>",
                    "emailMessage/Subject": "Orphaned Objects to Clean - Manager did not respond",
                    "emailMessage/To": "@parameters('Admin eMail')"
                  },
                  "retryPolicy": {
                    "count": 10,
                    "interval": "PT10S",
                    "type": "exponential"
                  }
                },
                "metadata": {
                  "operationMetadataId": "4210e15c-7972-481b-802c-22d71b2b98f6"
                },
                "runAfter": {
                  "Send_list_to_manager_-_failed_or_timed_out": [
                    "Succeeded"
                  ]
                },
                "type": "OpenApiConnection"
              },
              "Send_list_to_manager_-_failed_or_timed_out": {
                "inputs": {
                  "authentication": "@parameters('$authentication')",
                  "host": {
                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                    "connectionName": "shared_office365",
                    "operationId": "SendEmailV2"
                  },
                  "parameters": {
                    "emailMessage/Body": "<p>Former employees of yours have left the company with Power Platform objects left behind. These require reassignment or deletion in order to keep our tenant tidy of objects.<br>\n<br>\nNote also that if these objects are important to your team, not having a current owner could lead to them breaking later due to many reasons. Ex expired connections or tenant changes that will not have an owner to notify.<br>\n<br>\nPlease prepare a plan for each of these, to see if you would like to take ownership, assign to another person, or delete.<br>\n<br>\nIf you do not see the chat in teams from the Flow Bot, then you will not be able to perform these actions. As a result, please ensure you have <a href=\"https://powerautomate.microsoft.com/en-us/blog/microsoft-flow-in-microsoft-teams/\">turned on flow integration</a> and that you have not <a href=\"https://support.microsoft.com/en-us/office/hide-unhide-mute-or-pin-a-chat-in-teams-9aee02ef-713d-495b-8a73-9762d8e4b066\">muted or hidden the bot</a>.<br>\n<br>\n<u><strong>Apps<br>\n</strong></u>@{body('Create_HTML_table_OrphanedApps')}<u><br>\n</u><u><strong><br>\nFlows<br>\n</strong></u>@{body('Create_HTML_table_OrphanedFlows')}</p>",
                    "emailMessage/Subject": "Orphaned Objects to Clean",
                    "emailMessage/To": "@triggerBody()['text']"
                  },
                  "retryPolicy": {
                    "count": 10,
                    "interval": "PT10S",
                    "type": "exponential"
                  }
                },
                "metadata": {
                  "operationMetadataId": "4210e15c-7972-481b-802c-22d71b2b98f6"
                },
                "runAfter": {
                  "Post_a_timeout_message_as_the_Flow_bot_to_a_user": [
                    "Succeeded",
                    "Failed"
                  ]
                },
                "type": "OpenApiConnection"
              },
              "Set_returnValue_404": {
                "inputs": {
                  "name": "returnValue",
                  "value": 404
                },
                "metadata": {
                  "operationMetadataId": "7e72afc5-d178-4952-a55d-c5be981b27a0"
                },
                "runAfter": {
                  "Send_list_to_admin_-_failed_or_timed_out": [
                    "Succeeded"
                  ]
                },
                "type": "SetVariable"
              }
            }
          },
          "expression": {
            "equals": [
              "@variables('timedOutOrFailed')",
              "@false"
            ]
          },
          "metadata": {
            "operationMetadataId": "de777216-022f-40af-bdb7-a0fd5035b10b"
          },
          "runAfter": {
            "Set_timeOut_true_if_timed_out": [
              "Succeeded",
              "Skipped"
            ]
          },
          "type": "If"
        },
        "Initialize_AppsTableAppNameCol": {
          "inputs": {
            "variables": [
              {
                "name": "AppsTableAppNameCol",
                "type": "string",
                "value": " \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"App Name\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "aa059df3-c819-4953-9f02-3232ed61e53b"
          },
          "runAfter": {
            "Initialize_theCard_with_top_contents": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_AppsTableEmployeeNameCol": {
          "inputs": {
            "variables": [
              {
                "name": "AppsTableEmployeeNameCol",
                "type": "string",
                "value": " }\n                    ],\n                    \"width\": \"auto\"\n                },\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Employee Name\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "86215132-b7d1-45ca-9e88-c1c5bd8203f3"
          },
          "runAfter": {
            "Initialize_AppsTableAppNameCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_AppsTableLastLaunchedCol": {
          "inputs": {
            "variables": [
              {
                "name": "AppsTableLastLaunchedCol",
                "type": "string",
                "value": " }\n                    ],\n                    \"width\": \"auto\"\n                },\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Last Launched\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "9f734262-eeb7-4b2b-a580-c55815c1f9a1"
          },
          "runAfter": {
            "Initialize_AppsTableEmployeeNameCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_BulkOperationSuccess_to_true": {
          "inputs": {
            "variables": [
              {
                "name": "BulkOperationSuccess",
                "type": "boolean",
                "value": "@true"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "710ca5c4-0c9b-4fb2-ade1-6ce53b3e19e2"
          },
          "runAfter": {
            "Initialize_timedOut": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_FlowsTableAppNameCol": {
          "inputs": {
            "variables": [
              {
                "name": "FlowsTableAppNameCol",
                "type": "string",
                "value": " \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Flow Name\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "fb727b53-864b-48da-90bb-1515fffae96c"
          },
          "runAfter": {
            "Initialize_AppsTableLastLaunchedCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_FlowsTableEmployeeNameCol": {
          "inputs": {
            "variables": [
              {
                "name": "FlowsTableEmployeeNameCol",
                "type": "string",
                "value": " }\n                    ],\n                    \"width\": \"auto\"\n                },\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Employee Name\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "3f1fed01-2695-48f9-ae41-90a8bbb73b12"
          },
          "runAfter": {
            "Initialize_FlowsTableAppNameCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_FlowsTableStatusCol": {
          "inputs": {
            "variables": [
              {
                "name": "FlowsTableStatusCol",
                "type": "string",
                "value": " }\n                    ],\n                    \"width\": \"auto\"\n                },\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Flow Status\""
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "e1f97d22-d3da-43c4-a42a-e72aafbf38ed"
          },
          "runAfter": {
            "Initialize_FlowsTableEmployeeNameCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_OrphanedApps": {
          "inputs": {
            "variables": [
              {
                "name": "OrphanedApps",
                "type": "array"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "c65cc279-6905-4f1e-ada0-39bbd4d5deda"
          },
          "runAfter": {
            "Initialize_FlowsTableStatusCol": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_OrphanedFlows": {
          "inputs": {
            "variables": [
              {
                "name": "OrphanedFlows",
                "type": "array"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "5d5519ea-2940-4426-9bbc-fe215d5abc81"
          },
          "runAfter": {
            "Initialize_OrphanedApps": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_OrphanedObject": {
          "inputs": {
            "variables": [
              {
                "name": "OrphanedObject",
                "type": "object"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "8791ffa8-be3b-45f3-8078-3e8ecb0a6f88"
          },
          "runAfter": {
            "Initialize_OrphanedFlows": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_returnValue": {
          "inputs": {
            "variables": [
              {
                "name": "returnValue",
                "type": "integer",
                "value": 200
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "7b18d5f7-ecc1-43bb-ac67-b1f1b4136366"
          },
          "runAfter": {
            "Initialize_BulkOperationSuccess_to_true": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_theCard_with_top_contents": {
          "inputs": {
            "variables": [
              {
                "name": "theCard",
                "type": "string",
                "value": "{\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.2\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"You can decide what to do with all the objects at once or go through them one at a time\",\n            \"wrap\": true,\n            \"weight\": \"Bolder\"\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "327bd116-9122-4ed5-9026-7852b5dee613"
          },
          "runAfter": {
            "Get_managers_id": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_timedOut": {
          "inputs": {
            "variables": [
              {
                "name": "timedOutOrFailed",
                "type": "boolean",
                "value": "@false"
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "a7990a83-834a-431a-8b3a-6a6c18f9cdf8"
          },
          "runAfter": {
            "Initialize_OrphanedObject": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Prepare_HTML_Table_for_Emails_if_needed": {
          "actions": {
            "Apps_List_For_Email": {
              "inputs": {
                "from": "@body('Parse_Orphaned_Apps')",
                "select": {
                  "App": "@item()['AppDisplayName']",
                  "Environment": "@item()['EnvtDisplayName']",
                  "Last Launched": "@item()['LastLaunched']",
                  "Last Modified": "@item()['LastModified']",
                  "|": "|",
                  "||": "||",
                  "|||": "|||"
                }
              },
              "metadata": {
                "operationMetadataId": "6596e623-a3c3-452f-8d53-81ab6d71040b"
              },
              "runAfter": {},
              "type": "Select"
            },
            "Create_HTML_table_OrphanedApps": {
              "inputs": {
                "format": "HTML",
                "from": "@body('Apps_List_For_Email')"
              },
              "metadata": {
                "operationMetadataId": "2d865015-0bdd-4ee3-b3d4-c55cb6bb5a9d"
              },
              "runAfter": {
                "Apps_List_For_Email": [
                  "Succeeded"
                ]
              },
              "type": "Table"
            },
            "Create_HTML_table_OrphanedFlows": {
              "inputs": {
                "format": "HTML",
                "from": "@body('Flows_List_For_Email')"
              },
              "metadata": {
                "operationMetadataId": "eca9bdb6-3150-4fdc-832a-fdb27456f1e3"
              },
              "runAfter": {
                "Flows_List_For_Email": [
                  "Succeeded"
                ]
              },
              "type": "Table"
            },
            "Flows_List_For_Email": {
              "inputs": {
                "from": "@body('Parse_Orphaned_Flows')",
                "select": {
                  "Environment": "@item()['EnvtDisplayName']",
                  "Flow": "@item()['FlowDisplayName']",
                  "Last Modified": "@item()['LastModified']",
                  "State": "@item()['FlowState']",
                  "|": "|",
                  "||": "||",
                  "|||": "|||"
                }
              },
              "metadata": {
                "operationMetadataId": "cd11bb54-8958-4a50-a9e8-2476c73b550b"
              },
              "runAfter": {
                "Create_HTML_table_OrphanedApps": [
                  "Succeeded"
                ]
              },
              "type": "Select"
            }
          },
          "metadata": {
            "operationMetadataId": "a689baa7-cf28-4372-9478-0bf3d43ec67f"
          },
          "runAfter": {
            "Get_Orphaned_Objects_for_this_Manager": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "inputs": {
            "body": {
              "success": "@variables('returnValue')"
            },
            "schema": {
              "properties": {
                "success": {
                  "title": "Success",
                  "type": "number",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "metadata": {
            "operationMetadataId": "61e58f23-ee75-4e28-81d3-a9ad38aad914"
          },
          "runAfter": {
            "If_not_timed_out": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Send_Table_For_Response": {
          "inputs": {
            "authentication": "@parameters('$authentication')",
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
              "connectionName": "shared_teams",
              "operationId": "SubscribeUserFlowContinuation"
            },
            "parameters": {
              "UserFlowContinuationSubscriptionRequest/body/messageBody": "@variables('theCard')",
              "UserFlowContinuationSubscriptionRequest/body/recipient/isAlert": true,
              "UserFlowContinuationSubscriptionRequest/body/recipient/to": "@{triggerBody()['text']};",
              "UserFlowContinuationSubscriptionRequest/body/shouldUpdateCard": true,
              "UserFlowContinuationSubscriptionRequest/body/updateMessage": "Trying that now..."
            },
            "retryPolicy": {
              "count": 10,
              "interval": "PT10S",
              "type": "exponential"
            }
          },
          "limit": {
            "timeout": "PT23H"
          },
          "metadata": {
            "operationMetadataId": "562c47c6-58a7-48d4-baba-3d93b0ffdc8d"
          },
          "runAfter": {
            "Create_Adaptive_Card_with_all_orphans": [
              "Succeeded"
            ]
          },
          "type": "OpenApiConnectionWebhook"
        },
        "Set_timeOut_true_if_timed_out": {
          "inputs": {
            "name": "timedOutOrFailed",
            "value": "@true"
          },
          "metadata": {
            "operationMetadataId": "52eeb1ca-01b9-46d2-a6ba-1e850c8bd19f"
          },
          "runAfter": {
            "Send_Table_For_Response": [
              "TimedOut",
              "Failed"
            ]
          },
          "type": "SetVariable"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Admin eMail": {
          "defaultValue": "adelev@pplatform.onmicrosoft.com",
          "metadata": {
            "description": "CoE Admin eMail. Email address used in flows to send notifications to admins; this should be either your email address or a distribution list",
            "schemaName": "admin_AdminMail"
          },
          "type": "String"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://us.flow.microsoft.com/manage/environments/",
          "metadata": {
            "description": "Environment, including geographic location, for Power Automate - Ex for US: https://us.flow.microsoft.com/manage/environments/",
            "schemaName": "admin_PowerAutomateEnvironmentVariable"
          },
          "type": "String"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "Please enter your input",
                  "title": "ManagerEmail",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "metadata": {
            "operationMetadataId": "829d0ddd-28df-4a59-8657-6d1854daa95b"
          },
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
